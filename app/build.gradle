apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.dagger.hilt.android'

android {
    compileSdkVersion project_compile_sdk_version
    buildToolsVersion project_build_tools_version

    defaultConfig {
        applicationId "com.chronvas.btest"
        minSdkVersion project_min_sdk_version
        //noinspection OldTargetApi
        targetSdkVersion project_target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            buildConfigField "String", "BASE_URL", '"https://jsonplaceholder.typicode.com/"'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", "BASE_URL", '"https://jsonplaceholder.typicode.com/"'
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}

// LeakCanary: Ensure the no-op dependency is always used in JVM tests.
configurations.all { config ->
    if (config.name.contains('UnitTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':domain')
    implementation project(path: ':data')
    implementation 'androidx.core:core-ktx:1.9.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // ButterKnife
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    implementation "io.reactivex.rxjava2:rxjava:2.1.8"
    // Rx Binding
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.1.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.1.0'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.3.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:3.9.1"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'

    // LeakCanary
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // Utils
    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation "org.apache.commons:commons-lang3:3.7"
    implementation 'net.sourceforge.streamsupport:streamsupport:1.5.3'
}

kapt {
    correctErrorTypes true
}